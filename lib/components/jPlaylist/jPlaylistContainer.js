"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _propTypes=_interopRequireDefault(require("prop-types")),_reactJplayer=require("@appigram/react-jplayer"),_reactRedux=require("react-redux"),_recompose=require("recompose"),_jPlaylist=_interopRequireDefault(require("./jPlaylist")),_constants=require("../../util/constants"),_actions=require("../../actions/actions");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var mapStateToProps=function(a,b){var c,d=a.jPlayers,e=a.jPlaylists,f=b.id;return{playNow:e[f].playNow,shuffled:e[f].shuffled,loop:e[f].loop,shuffleOnLoop:e[f].shuffleOnLoop,focused:d[f].focused,playlist:e[f].playlist,current:e[f].current,id:f,states:(c={},_defineProperty(c,_constants.classes.states.LOOPED_PLAYLIST,"loop-playlist"===e[f].loop),_defineProperty(c,_constants.classes.states.SHUFFLED,e[f].shuffled),c)}},createProps=function(a){var b=a.playlist,c=a.current;return{currentMediaId:0<b.length?b[c].id:null}},handlers={setLoop:function setLoop(a){return function(){"loop"===a.loop?a.dispatch(_reactJplayer.actions.setOption(a.id,"loop",!0)):a.dispatch(_reactJplayer.actions.setOption(a.id,"loop",!1))}},playNext:function playNext(a){return function(){return a.dispatch((0,_actions.next)(a.id))}},playMediaNow:function playMediaNow(a){return function(){a.dispatch(_reactJplayer.actions.play(a.id)),a.dispatch((0,_actions.setOption)(a.id,"playNow",!1))}},changeMedia:function changeMedia(a){return function(){0<a.playlist.length&&a.dispatch(_reactJplayer.actions.setMedia(a.id,a.playlist[a.current]))}},shufflePlaylistOnLoopPlaylist:function shufflePlaylistOnLoopPlaylist(a){return function(){"loop-playlist"===a.loop&&0===a.current&&a.shuffled&&a.shuffleOnLoop&&a.dispatch((0,_actions.shuffle)(a.id,!0,!0))}},clearMediaWhenPlaylistEmpty:function clearMediaWhenPlaylistEmpty(a){return function(){0===a.playlist.length&&a.dispatch(_reactJplayer.actions.clearMedia(a.id))}}},contextTypes={id:_propTypes["default"].string,internalEvents:_propTypes["default"].shape({onEnded:_propTypes["default"].func})},childContext=function(a){var b=a.id,c=a.playNext;return{id:b,internalEvents:{onEnded:c}}},lifecycle={componentDidMount:function componentDidMount(){0<this.props.playlist.length&&this.props.dispatch((0,_actions.setPlaylist)(this.props.id,this.props.playlist))},componentDidUpdate:function componentDidUpdate(a){this.props.currentMediaId!==a.currentMediaId&&this.props.changeMedia(),this.props.playlist.length!==a.playlist.length&&this.props.clearMediaWhenPlaylistEmpty(),this.props.loop!==a.loop&&this.props.setLoop(),this.props.playNow&&this.props.playMediaNow(),this.props.currentMediaId!==a.currentMediaId&&a.current===a.playlist.length-1&&this.props.shufflePlaylistOnLoopPlaylist()}},_default=(0,_recompose.compose)((0,_reactRedux.connect)(mapStateToProps),(0,_recompose.withProps)(createProps),(0,_recompose.withHandlers)(handlers),(0,_recompose.withContext)(contextTypes,childContext),(0,_recompose.lifecycle)(lifecycle))(_jPlaylist["default"]);exports["default"]=_default;